name: Build AniWRT

on:
  workflow_dispatch:
    inputs:
      resources:
        description: "Select resources"
        required: true
        default: "openwrt:23.05.4"
        type: choice
        options:
          - openwrt:23.05.4
          - openwrt:23.05.3
          - immortalwrt:23.05.3
          - immortalwrt:23.05.2
      rootfs_partsize:
        description: "Specify ROOTFS_PARTSIZE in MB"
        required: true
        default: "256"
      enable_mod_sdcard:
        description: "Enable MOD SD Card"
        required: false
        default: "false"
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

      - name: Parse resources
        id: parse_resources
        run: |
          resources="${{ github.event.inputs.resources }}"
          export DISTRO="${resources%%:*}"
          export VERSION="${resources##*:}"
          echo "DISTRO=${DISTRO}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Setup ImageBuilder
        run: |
          curl -L https://downloads.${DISTRO}.org/releases/${VERSION}/targets/armsr/armv8/${DISTRO}-imagebuilder-${VERSION}-armsr-armv8.Linux-x86_64.tar.xz -o imagebuilder.tar.xz
          mkdir imagebuilder
          tar -xf imagebuilder.tar.xz -C imagebuilder --strip-components=1

      - name: MOD SD Card by msidiq22
        if: ${{ github.event.inputs.enable_mod_sdcard == 'true' }}
        run: |
          mkdir -p imagebuilder/files/boot/
          git clone https://github.com/msidiq22/mod-boot-sdcard imagebuilder/files/boot/

      - name: Build image
        run: |
          make -C imagebuilder image PROFILE="generic" ROOTFS_PARTSIZE=${{ github.event.inputs.rootfs_partsize }}
          if [[ "${DISTRO}" == "openwrt" ]]; then
            mv imagebuilder/bin/targets/armsr/armv8/${DISTRO}-${VERSION}-armsr-armv8-generic-ext4-combined.img.gz aniwrt-${DISTRO}-${VERSION}.img.gz
          elif [[ "${DISTRO}" == "immortalwrt" ]]; then
            mv imagebuilder/bin/targets/armsr/armv8/${DISTRO}-${VERSION}-armsr-armv8-generic-ext4-combined-efi.img.gz aniwrt-${DISTRO}-${VERSION}.img.gz
          fi
          echo "IMAGE_NAME=aniwrt-${DISTRO}-${VERSION}.img.gz" >> $GITHUB_ENV

      - name: Upload image to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.repository.releases_url }}/assets?name=${{ env.IMAGE_NAME }}
          asset_path: ${{ env.IMAGE_NAME }}
          asset_name: ${{ env.IMAGE_NAME }}
          asset_content_type: application/octet-stream
